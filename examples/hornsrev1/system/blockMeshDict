/*--------------------------------*- C++ -*----------------------------------*\
| =========                |                                                 |
| \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \    /   O peration     | Version:  v2206                                 |
|   \  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version         2.0;
    format          ascii;
    class           dictionary;
    object          blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1;

vertices
(
    (-4000.00000000 -4000.00000000 0.00000000) // 0
    (0.00000000 -4000.00000000 0.00000000) // 1
    (0.00000000 0.00000000 0.00000000) // 2
    (-4000.00000000 0.00000000 0.00000000) // 3
    (-4000.00000000 -4000.00000000 1.00000000) // 4
    (0.00000000 -4000.00000000 1.00000000) // 5
    (0.00000000 0.00000000 1.00000000) // 6
    (-4000.00000000 0.00000000 1.00000000) // 7
    (6000.00000000 -4000.00000000 0.00000000) // 8
    (6000.00000000 0.00000000 0.00000000) // 9
    (6000.00000000 -4000.00000000 1.00000000) // 10
    (6000.00000000 0.00000000 1.00000000) // 11
    (10000.00000000 -4000.00000000 0.00000000) // 12
    (10000.00000000 0.00000000 0.00000000) // 13
    (10000.00000000 -4000.00000000 1.00000000) // 14
    (10000.00000000 0.00000000 1.00000000) // 15
    (0.00000000 4400.00000000 0.00000000) // 16
    (-4000.00000000 4400.00000000 0.00000000) // 17
    (0.00000000 4400.00000000 1.00000000) // 18
    (-4000.00000000 4400.00000000 1.00000000) // 19
    (6000.00000000 4400.00000000 0.00000000) // 20
    (6000.00000000 4400.00000000 1.00000000) // 21
    (10000.00000000 4400.00000000 0.00000000) // 22
    (10000.00000000 4400.00000000 1.00000000) // 23
    (0.00000000 8400.00000000 0.00000000) // 24
    (-4000.00000000 8400.00000000 0.00000000) // 25
    (0.00000000 8400.00000000 1.00000000) // 26
    (-4000.00000000 8400.00000000 1.00000000) // 27
    (6000.00000000 8400.00000000 0.00000000) // 28
    (6000.00000000 8400.00000000 1.00000000) // 29
    (10000.00000000 8400.00000000 0.00000000) // 30
    (10000.00000000 8400.00000000 1.00000000) // 31
);

blocks
(
    hex ( 0 1 2 3 4 5 6 7 )  ( 44 44 1 ) simpleGrading ( 0.03125000 0.03125000 1.00000000 ) // 0 
    hex ( 1 8 9 2 5 10 11 6 )  ( 600 44 1 ) simpleGrading ( 1.00000000 0.03125000 1.00000000 ) // 0 
    hex ( 8 12 13 9 10 14 15 11 )  ( 44 44 1 ) simpleGrading ( 32.00000000 0.03125000 1.00000000 ) // 0 
    hex ( 3 2 16 17 7 6 18 19 )  ( 44 440 1 ) simpleGrading ( 0.03125000 1.00000000 1.00000000 ) // 0 
    hex ( 2 9 20 16 6 11 21 18 )  ( 600 440 1 ) simpleGrading ( 1.00000000 1.00000000 1.00000000 ) // 0 
    hex ( 9 13 22 20 11 15 23 21 )  ( 44 440 1 ) simpleGrading ( 32.00000000 1.00000000 1.00000000 ) // 0 
    hex ( 17 16 24 25 19 18 26 27 )  ( 44 44 1 ) simpleGrading ( 0.03125000 32.00000000 1.00000000 ) // 0 
    hex ( 16 20 28 24 18 21 29 26 )  ( 600 44 1 ) simpleGrading ( 1.00000000 32.00000000 1.00000000 ) // 0 
    hex ( 20 22 30 28 21 23 31 29 )  ( 44 44 1 ) simpleGrading ( 32.00000000 32.00000000 1.00000000 ) // 0 
);

boundary
(
    bottomAndTop
    {
        type empty;
        faces
        (
            (0 1 2 3)
            (4 5 6 7)
            (1 8 9 2)
            (5 10 11 6)
            (8 12 13 9)
            (10 14 15 11)
            (3 2 16 17)
            (7 6 18 19)
            (2 9 20 16)
            (6 11 21 18)
            (9 13 22 20)
            (11 15 23 21)
            (17 16 24 25)
            (19 18 26 27)
            (16 20 28 24)
            (18 21 29 26)
            (20 22 30 28)
            (21 23 31 29)
        );
    }
    sides
    {
        type patch;
        faces
        (
            (4 5 1 0)
            (5 10 8 1)
            (10 14 12 8)
            (27 26 24 25)
            (26 29 28 24)
            (29 31 30 28)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (4 0 3 7)
            (7 3 17 19)
            (19 17 25 27)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (14 12 13 15)
            (15 13 22 23)
            (23 22 30 31)
        );
    }
);

mergePatchPairs
(
);

